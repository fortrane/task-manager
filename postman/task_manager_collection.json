{
  "info": {
    "_postman_id": "a9a5bd1d-e6d5-4b5b-9e63-8e76f7c8e123",
    "name": "Task Manager API",
    "description": "API для управления задачами с расширенными возможностями",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8000/api",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "taskId",
      "value": "",
      "type": "string"
    },
    {
      "key": "timeTrackId",
      "value": "",
      "type": "string"
    },
    {
      "key": "reminderId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has correct user data\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.username).to.eql(pm.iterationData.get(\"username\") || \"testuser\");",
                  "    pm.expect(jsonData.email).to.eql(pm.iterationData.get(\"email\") || \"test@example.com\");",
                  "    pm.expect(jsonData.id).to.be.a(\"number\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"{{$randomUserName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Регистрация нового пользователя"
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has access token\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.access_token).to.be.a(\"string\");",
                  "    pm.expect(jsonData.token_type).to.eql(\"bearer\");",
                  "    ",
                  "    pm.collectionVariables.set(\"accessToken\", jsonData.access_token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "username",
                  "value": "testuser",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "password123",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/auth/token",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "token"]
            },
            "description": "Получение токена доступа"
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.be.a(\"number\");",
                  "    pm.expect(jsonData.username).to.be.a(\"string\");",
                  "    pm.expect(jsonData.email).to.be.a(\"string\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            },
            "description": "Получение информации о текущем пользователе"
          },
          "response": []
        }
      ],
      "description": "Аутентификация и управление пользователями"
    },
    {
      "name": "Tasks",
      "item": [
        {
          "name": "Create Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has task data\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.be.a(\"number\");",
                  "    pm.expect(jsonData.title).to.be.a(\"string\");",
                  "    ",
                  "    // Save task ID for other requests",
                  "    pm.collectionVariables.set(\"taskId\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Test Task\",\n    \"description\": \"This is a test task created via Postman\",\n    \"priority\": \"medium\",\n    \"category\": \"work\",\n    \"due_date\": \"{{$isoTimestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", ""]
            },
            "description": "Создание новой задачи"
          },
          "response": []
        },
        {
          "name": "Get Tasks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", ""],
              "query": [
                {
                  "key": "status",
                  "value": "todo",
                  "disabled": true
                },
                {
                  "key": "priority",
                  "value": "high",
                  "disabled": true
                },
                {
                  "key": "category",
                  "value": "work",
                  "disabled": true
                }
              ]
            },
            "description": "Получение списка задач"
          },
          "response": []
        },
        {
          "name": "Get Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has task data\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.be.a(\"number\");",
                  "    pm.expect(jsonData.title).to.be.a(\"string\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Получение конкретной задачи"
          },
          "response": []
        },
        {
          "name": "Update Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Task was updated\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.title).to.eql(\"Updated Task Title\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated Task Title\",\n    \"status\": \"in_progress\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Обновление задачи"
          },
          "response": []
        },
        {
          "name": "Delete Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function() {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Удаление задачи"
          },
          "response": []
        }
      ],
      "description": "Управление задачами"
    },
    {
      "name": "Recurring Tasks",
      "item": [
        {
          "name": "Create Recurring Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"frequency\": \"weekly\",\n    \"interval\": 1,\n    \"start_date\": \"{{$isoTimestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "recurring"]
            },
            "description": "Создание повторяющейся задачи"
          },
          "response": []
        },
        {
          "name": "Get Recurring Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "recurring"]
            },
            "description": "Получение информации о повторяющейся задаче"
          },
          "response": []
        },
        {
          "name": "Update Recurring Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"frequency\": \"monthly\",\n    \"interval\": 2\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "recurring"]
            },
            "description": "Обновление повторяющейся задачи"
          },
          "response": []
        },
        {
          "name": "Delete Recurring Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function() {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/recurring",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "recurring"]
            },
            "description": "Удаление повторяющейся задачи"
          },
          "response": []
        }
      ],
      "description": "Управление повторяющимися задачами"
    },
    {
      "name": "Time Tracking",
      "item": [
        {
          "name": "Start Time Tracking",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Time track started\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.be.a(\"number\");",
                  "    pm.expect(jsonData.start_time).to.be.a(\"string\");",
                  "    pm.expect(jsonData.end_time).to.be.null;",
                  "    ",
                  "    pm.collectionVariables.set(\"timeTrackId\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/time-tracking/tasks/{{taskId}}/time/start",
              "host": ["{{baseUrl}}"],
              "path": ["time-tracking", "tasks", "{{taskId}}", "time", "start"]
            },
            "description": "Начало отслеживания времени задачи"
          },
          "response": []
        },
        {
          "name": "Stop Time Tracking",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Time track stopped\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.be.a(\"number\");",
                  "    pm.expect(jsonData.end_time).to.be.a(\"string\");",
                  "    pm.expect(jsonData.duration).to.be.a(\"number\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/time-tracking/tasks/{{taskId}}/time/stop",
              "host": ["{{baseUrl}}"],
              "path": ["time-tracking", "tasks", "{{taskId}}", "time", "stop"]
            },
            "description": "Остановка отслеживания времени задачи"
          },
          "response": []
        },
        {
          "name": "Create Time Track",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Time track created\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.be.a(\"number\");",
                  "    pm.collectionVariables.set(\"timeTrackId\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"start_time\": \"{{$isoTimestamp}}\",\n    \"end_time\": \"{{$isoTimestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/time-tracking/tasks/{{taskId}}/time",
              "host": ["{{baseUrl}}"],
              "path": ["time-tracking", "tasks", "{{taskId}}", "time"]
            },
            "description": "Создание записи отслеживания времени"
          },
          "response": []
        },
        {
          "name": "Get Time Tracks for Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/time-tracking/tasks/{{taskId}}/time",
              "host": ["{{baseUrl}}"],
              "path": ["time-tracking", "tasks", "{{taskId}}", "time"]
            },
            "description": "Получение всех записей отслеживания времени для задачи"
          },
          "response": []
        },
        {
          "name": "Get Time Track",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/time-tracking/time/{{timeTrackId}}",
              "host": ["{{baseUrl}}"],
              "path": ["time-tracking", "time", "{{timeTrackId}}"]
            },
            "description": "Получение конкретной записи отслеживания времени"
          },
          "response": []
        },
        {
          "name": "Update Time Track",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"end_time\": \"{{$isoTimestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/time-tracking/time/{{timeTrackId}}",
              "host": ["{{baseUrl}}"],
              "path": ["time-tracking", "time", "{{timeTrackId}}"]
            },
            "description": "Обновление записи отслеживания времени"
          },
          "response": []
        },
        {
          "name": "Delete Time Track",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function() {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/time-tracking/time/{{timeTrackId}}",
              "host": ["{{baseUrl}}"],
              "path": ["time-tracking", "time", "{{timeTrackId}}"]
            },
            "description": "Удаление записи отслеживания времени"
          },
          "response": []
        }
      ],
      "description": "Управление отслеживанием времени"
    },
    {
      "name": "Reminders",
      "item": [
        {
          "name": "Create Reminder",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Reminder created\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.be.a(\"number\");",
                  "    pm.expect(jsonData.reminder_time).to.be.a(\"string\");",
                  "    ",
                  "    pm.collectionVariables.set(\"reminderId\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reminder_time\": \"{{$isoTimestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reminders/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reminders", "tasks", "{{taskId}}"]
            },
            "description": "Создание напоминания для задачи"
          },
          "response": []
        },
        {
          "name": "Get Reminders for Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an(\"array\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/reminders/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reminders", "tasks", "{{taskId}}"]
            },
            "description": "Получение всех напоминаний для задачи"
          },
          "response": []
        },
        {
          "name": "Get Reminder",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/reminders/reminders/{{reminderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reminders", "reminders", "{{reminderId}}"]
            },
            "description": "Получение конкретного напоминания"
          },
          "response": []
        },
        {
          "name": "Update Reminder",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reminder_time\": \"{{$isoTimestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reminders/update/{{reminderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reminders", "update", "{{reminderId}}"]
            },
            "description": "Обновление напоминания"
          },
          "response": []
        },
        {
          "name": "Delete Reminder",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function() {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/reminders/delete/{{reminderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reminders", "delete", "{{reminderId}}"]
            },
            "description": "Удаление напоминания"
          },
          "response": []
        }
      ],
      "description": "Управление напоминаниями"
    },
    {
      "name": "Telegram Integration",
      "item": [
        {
          "name": "Connect Telegram",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"telegram_id\": 123456789,\n    \"chat_id\": 123456789\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/telegram/connect",
              "host": ["{{baseUrl}}"],
              "path": ["telegram", "connect"]
            },
            "description": "Подключение аккаунта Telegram к учетной записи пользователя"
          },
          "response": []
        },
        {
          "name": "Get Telegram Connection",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/telegram/connection",
              "host": ["{{baseUrl}}"],
              "path": ["telegram", "connection"]
            },
            "description": "Получение информации о подключенном аккаунте Telegram"
          },
          "response": []
        },
        {
          "name": "Disable Telegram Notifications",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"is_active\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/telegram/connection",
              "host": ["{{baseUrl}}"],
              "path": ["telegram", "connection"]
            },
            "description": "Отключение уведомлений Telegram"
          },
          "response": []
        },
        {
          "name": "Delete Telegram Connection",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function() {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/telegram/connection",
              "host": ["{{baseUrl}}"],
              "path": ["telegram", "connection"]
            },
            "description": "Удаление подключения к Telegram"
          },
          "response": []
        }
      ],
      "description": "Управление интеграцией с Telegram"
    }
  ]
}